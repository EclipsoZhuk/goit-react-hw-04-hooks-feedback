{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Feedback/Feedback.module.css","components/Notification/Notification.module.css","data/state.js","components/Feedback/Feedback.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","FEEDBACK_OPTIONS","Feedback","options","onLeaveFeedback","className","s","feedback","title","map","option","type","value","buttons","onClick","e","Statistics","good","neutral","bad","total","totalPositive","statistics","list","item","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","target","prev","Math","trunc","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0IACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,MAAQ,0BAA0B,KAAO,yBAAyB,KAAO,2B,iBCAvID,EAAOC,QAAU,CAAC,SAAW,2BAA2B,MAAQ,wBAAwB,QAAU,4B,mBCAlGD,EAAOC,QAAU,CAAC,aAAe,qC,uGCDpBC,EAAmB,CAAC,OAAQ,UAAW,O,uBCGrC,SAASC,EAAT,GAAsD,IAAD,IAAjCC,eAAiC,MAAvB,GAAuB,EAAnBC,EAAmB,EAAnBA,gBAC7C,OACI,sBAAKC,UAAWC,IAAEC,SAAlB,UACI,oBAAIF,UAAWC,IAAEE,MAAjB,mCACA,8BACKL,EAAQM,KAAI,SAAAC,GAAM,OACf,wBAEIC,KAAK,SACLC,MAAOF,EACPL,UAAWC,IAAEO,QACbC,QAAS,SAAAC,GACLX,EAAgBW,IANxB,SASKL,GARIA,W,oBCPd,SAASM,EAAT,GAMX,IALAC,EAKD,EALCA,KACAC,EAID,EAJCA,QACAC,EAGD,EAHCA,IACAC,EAED,EAFCA,MACAC,EACD,EADCA,cAEA,OACI,sBAAKhB,UAAWC,IAAEgB,WAAlB,UACI,oBAAIjB,UAAWC,IAAEE,MAAjB,wBACA,qBAAIH,UAAWC,IAAEiB,KAAjB,UACI,qBAAIlB,UAAWC,IAAEkB,KAAjB,mBAA8BP,KAC9B,qBAAIZ,UAAWC,IAAEkB,KAAjB,sBAAiCN,KACjC,qBAAIb,UAAWC,IAAEkB,KAAjB,kBAA6BL,KAE7B,qBAAId,UAAWC,IAAEkB,KAAjB,UACI,2CACA,+BAAOJ,OAGX,qBAAIf,UAAWC,IAAEkB,KAAjB,UACI,uDACA,iCAAOH,EAAP,gB,oBCtBL,SAASI,EAAT,GAA0C,IAAD,IAAjBC,eAAiB,MAAP,IAAO,EACpD,OAAO,oBAAIrB,UAAWC,IAAEqB,aAAjB,SAAgCD,ICE5B,SAASE,IACpB,MAAwBC,mBAAS,GAAjC,mBAAOZ,EAAP,KAAaa,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAOX,EAAP,KAAgBa,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAOV,EAAP,KAAYa,EAAZ,KAuBMC,EAAqB,kBAAMhB,EAAOC,EAAUC,GAKlD,OACI,qCACI,cAACjB,EAAD,CACIC,QAASF,EACTG,gBA9BY,SAAC,GAGrB,OAHoC,EAAb8B,OACFtB,OAGjB,IAAK,OACDkB,GAAQ,SAAAK,GAAI,OAAIA,EAAO,KACvB,MACJ,IAAK,UACDJ,GAAW,SAAAI,GAAI,OAAIA,EAAO,KAC1B,MACJ,IAAK,MACDH,GAAO,SAAAG,GAAI,OAAIA,EAAO,KACtB,MACJ,QACI,WAKC,IAATlB,GAA0B,IAAZC,GAAyB,IAARC,EAcvB,cAACM,EAAD,CAAcC,QAAQ,sBAEtB,cAACV,EAAD,CACIC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOa,IACPZ,cAhBZe,KAAKC,MAAOpB,EAAOgB,IAAwB,U,YC5BnDK,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAACZ,EAAD,MAEJa,SAASC,eAAe,W","file":"static/js/main.c134ec83.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1RL70\",\"title\":\"Statistics_title__3_Pl5\",\"list\":\"Statistics_list__1TypA\",\"item\":\"Statistics_item__1PST1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedback\":\"Feedback_feedback__1wXO9\",\"title\":\"Feedback_title__2EkBy\",\"buttons\":\"Feedback_buttons__32H9s\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__3LOMV\"};","export const FEEDBACK_OPTIONS = ['good', 'neutral', 'bad'];\r\n","import PropTypes from 'prop-types';\nimport s from './Feedback.module.css';\n\nexport default function Feedback({ options = [], onLeaveFeedback }) {\n    return (\n        <div className={s.feedback}>\n            <h1 className={s.title}>Please leave feedback</h1>\n            <div>\n                {options.map(option => (\n                    <button\n                        key={option}\n                        type=\"button\"\n                        value={option}\n                        className={s.buttons}\n                        onClick={e => {\n                            onLeaveFeedback(e);\n                        }}\n                    >\n                        {option}\n                    </button>\n                ))}\n            </div>\n        </div>\n    );\n}\n\nFeedback.propTypes = {\n    options: PropTypes.array.isRequired,\n    onLeaveFeedback: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics({\n    good,\n    neutral,\n    bad,\n    total,\n    totalPositive,\n}) {\n    return (\n        <div className={s.statistics}>\n            <h2 className={s.title}>Statistics</h2>\n            <ul className={s.list}>\n                <li className={s.item}>Good: {good}</li>\n                <li className={s.item}>Neutral: {neutral}</li>\n                <li className={s.item}>Bad: {bad}</li>\n\n                <li className={s.item}>\n                    <span>Total: </span>\n                    <span>{total}</span>\n                </li>\n\n                <li className={s.item}>\n                    <span>Positive feedback: </span>\n                    <span>{totalPositive}%</span>\n                </li>\n            </ul>\n        </div>\n    );\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    totalPositive: PropTypes.number.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({ message = ' ' }) {\n    return <h2 className={s.notification}>{message}</h2>;\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n};\n","import { useState } from 'react';\nimport { FEEDBACK_OPTIONS } from './data/state';\nimport Feedback from './components/Feedback';\nimport Statistics from './components/Statistics';\nimport Notification from './components/Notification';\n\nexport default function App() {\n    const [good, setGood] = useState(0);\n    const [neutral, setNeutral] = useState(0);\n    const [bad, setBad] = useState(0);\n\n    const onLeaveFeedback = ({ target }) => {\n        const value = target.value;\n\n        switch (value) {\n            case 'good':\n                setGood(prev => prev + 1);\n                break;\n            case 'neutral':\n                setNeutral(prev => prev + 1);\n                break;\n            case 'bad':\n                setBad(prev => prev + 1);\n                break;\n            default:\n                return;\n        }\n    };\n\n    const countZero = () =>\n        good === 0 && neutral === 0 && bad === 0 ? true : false;\n\n    const countTotalFeedback = () => good + neutral + bad;\n\n    const countPositiveFeedbackPercentage = () =>\n        Math.trunc((good / countTotalFeedback()) * 100);\n\n    return (\n        <>\n            <Feedback\n                options={FEEDBACK_OPTIONS}\n                onLeaveFeedback={onLeaveFeedback}\n            />\n            {countZero() ? (\n                <Notification message=\"No feedback given\" />\n            ) : (\n                <Statistics\n                    good={good}\n                    neutral={neutral}\n                    bad={bad}\n                    total={countTotalFeedback()}\n                    totalPositive={countPositiveFeedbackPercentage()}\n                />\n            )}\n        </>\n    );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'modern-normalize/modern-normalize.css';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <App />\n    </React.StrictMode>,\n    document.getElementById('root'),\n);\n"],"sourceRoot":""}